一、wait/notify 等待通知机制
	wait的作用是使当前执行代码的线程进行等待，wait()方法是Object类的方法，该方法用来将当前线程置入"预执行队列"中，并且在wait()所在代码处停止
执行，知道接到通知或者被中断为止。
	在调用wait()方法之前，线程必须获得该对象的对象级别锁，即只能在同步方法或同步代码块中调用wait()方法。在执行wait()方法后，当前线程释放锁。
如果在执行wait()方法时，没有持有适当的锁，则抛出IllegalMonitorStateException。
	在调用notify()方法之前，线程也必须获得该对象的对象级别锁，即只能在同步方法或同步代码块中调用notify()方法。该方法用来通知那些可能等待该对象
的对象锁的其他线程，如果有多个线程等待，则由线程调度器随机挑选其中一个呈wait状态的线程，对其发出通知notify，并使它获取该对象的对象锁。
	需要说明的是，在执行notify方法后，当前线程不会马上释放该对象锁，呈wait状态的线程也并不能马上获得该对象锁，要等到执行notify()方法的线程将程
序执行完，也就是退出synchronized代码块后，当前线程才会释放锁，而呈wait状态所在的线程才可以获取该对象锁。当第一个获得该对象锁的wait线程执行完
后，它会释放掉该对象锁，此时如果"该对象"没有再次使用notify语句，即使该对象空闲（对象锁没有没任何线程获取），其他wait状态的等待线程由于没有得到
notify通知，还会继续阻塞在wait状态，指导这个对象发出一个notify或者notifyAll。